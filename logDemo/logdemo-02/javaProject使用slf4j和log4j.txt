背景：
	slf4j（日志接口类）
	log4j（日志实现类）  
  	slf4j-log4j12（slf4j到log4j的桥接器）
  	
 	项目：非web的java project项目

注意事项：
	1、添加lib从通过点击指定的lib下的jar将其添加到运行环境中
	2、若没有log4j。properties的配置文件，则会抛出log4j:WARN No appenders could be found for logger 异常。 	
	3、创建名称为log4j.properties的配置文件，并将其存放在src的根目录下。因为log4j默认会从该位置去读取其配置文件。

使用：
	1、log4j
		模式：配置文件存放在src的根目录并命名为log4j.properties即根据log4j要求存放默认文件
		1》 添加log4j.properties
		2》	创建测试类
			创建log对象实例private final static Logger log = LogManager.getLogger(Demo02.class);
  			创建main方法调用log的对应方法然后运行
  			
  		模式：自定义名称，并随意存放位置
  		1》创建resource-properties文件路径并创建log4g01.properties文件
  		2》创建log4j的实例  并在main中进行调用
  			String path = "resource/properties/log4j01.peropetries";
			PropertyConfigurator.configure(path);
			log.error("这是case2");
			
	2、slf4j +  log4j
		模式：配置文件为默认路径默认名称
		1》创建log对象实例，需要注意对应类所属的包
			private final static org.slf4j.Logger log3 = org.slf4j.LoggerFactory.getLogger(Demo02.class);
		2》测试 直接调用log3的方法即可
		
		模式：配置文件为自定义路径自定义名称
		1》创建log对象实例，需要注意对应类所属的包
			private final static org.slf4j.Logger log4 = org.slf4j.LoggerFactory.getLogger(Demo02.class);
		2》通过配置文件的path给log4j的PropertyConfigurator对象设置configure配置文件的路径
			然后调用log4对应方法即可
		