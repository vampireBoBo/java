<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>lhb</groupId>
  <artifactId>demo190814</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>demo190814 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- 依赖版本 -->
  <properties>
  	<spring.version>5.2.22.RELEASE</spring.version>
  	<springmvc.version>5.1.6.RELEASE</springmvc.version>
  	<servlet>3.1.0</servlet>
  	<jackson.version>1.9.13</jackson.version>
  	<log4j.version>2.11.1</log4j.version>
  	<org.apache.shiro.version>1.2.3</org.apache.shiro.version>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    
    <!-- spring start -->
    <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-core</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-web</artifactId>
	    <version>${spring.version}</version>
	</dependency>
    <!-- spring end -->
    
    <!-- springMVC start -->
    <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-webmvc</artifactId>
	    <version>${springmvc.version}</version>
	</dependency>
    <!-- springMVC end -->
    
   	<!-- servlet start 引入该类后 HttpServletRequest等类才可以正常引入  同时tomca等容器已经包含该插件故引入时 设置该插件的范围为provided -->
   	<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet}</version>
			<scope>provided</scope>
	</dependency>
    <!-- servlet end -->
    	
    <!-- 工具类  start -->
    <dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.20</version>
	</dependency>
	<!-- mvc视图层与jsp之间传值工具 -->
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-mapper-asl</artifactId>
		<version>${jackson.version}</version>
	</dependency> 
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-core-asl</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-annotations</artifactId>
		<version>2.9.8</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.9.8</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>5.1.8.RELEASE</version>
	    <scope>test</scope>
	</dependency>
	<!-- jsp页面使用jstl标签库 -->
	<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
	</dependency>
    <!-- 工具类  start -->
    
    <!-- 日志 start  学习链接：https://blog.csdn.net/NRlovestudy/article/details/97696884-->
    <dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-api</artifactId>
	    <version>${log4j.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-core</artifactId>
	    <version>${log4j.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>1.7.10</version>
	</dependency>
	<dependency> <!-- 桥接：告诉Slf4j使用Log4j2 -->
	    <groupId>org.apache.logging.log4j</groupId>
	    <artifactId>log4j-slf4j-impl</artifactId>
	    <version>${log4j.version}</version>
	</dependency>
	<!--用于解决web环境下关闭服务器时可能出现的log4j线程无法及时关闭的warn，web工程需要包含log4j-web，非web工程不需要 -->
	<dependency>
		<groupId>org.apache.logging.log4j</groupId>
		<artifactId>log4j-web</artifactId>
		<scope>runtime</scope>
		<version>${log4j.version}</version>
	</dependency>
	 
	<!--使用log4j2的AsyncLogger时需要包含disruptor -->
	<dependency>
	    <groupId>com.lmax</groupId>
	    <artifactId>disruptor</artifactId>
	    <scope>runtime</scope>
	    <version>3.4.2</version>
	</dependency>
    <!-- 日志 end -->
    
    <!-- mail start -->
    <dependency >
        <groupId >javax.mail </groupId >
        <artifactId >mail </artifactId >
        <version >1.4.5 </version >
    </dependency >
    <dependency >
        <groupId >com.sun.mail </groupId >
        <artifactId >javax.mail </artifactId >
        <version >1.5.4 </version >
    </dependency >
     <!-- mail end -->
     
    <!-- shiro Dependencies start-->
	<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-all</artifactId>
			<version>${org.apache.shiro.version}</version>
	</dependency>
	<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${org.apache.shiro.version}</version>
	</dependency>
	<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${org.apache.shiro.version}</version>
	</dependency>
	<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>${org.apache.shiro.version}</version>
	</dependency>
	<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${org.apache.shiro.version}</version>
	</dependency>
    <!-- shiro Dependencies end-->
    
  </dependencies>
  <build>
    <finalName>demo190814</finalName>
  </build>
</project>
