<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  	<!-- <listener>
    	<listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
  	</listener> -->
  <!-- 	<context-param>
        <param-name>log4jContextName</param-name>
        <param-value>star</param-value>
    </context-param> -->
	<!-- <context-param>
    	<param-name>log4jConfiguration</param-name>
    	<param-value>classpath:properties/log4j2.xml</param-value>
  	</context-param> -->
  	
  	<!--监听器和过滤器-->
	<!-- <listener>
	    <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
	</listener>
	 
	<filter>
	    <filter-name>log4jServletFilter</filter-name>
	    <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>log4jServletFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	    <dispatcher>INCLUDE</dispatcher>
	    <dispatcher>ERROR</dispatcher>
	</filter-mapping>
	 -->
	<!-- <context-param>
	    <param-name>log4jConfiguration</param-name>
	    <param-value>classpath:properties/log4j2.xml</param-value>
	</context-param> -->
	<!-- 动态修改log4j2.xml：容器会每60秒扫描log4j的配置文件 -->
	<!-- <context-param>
	    <param-name>log4jRefreshInterval</param-name>
	    <param-value>60000</param-value>
	</context-param>  -->
	<!-- log4j2-end -->
  	
 
  	<display-name>demo190814</display-name>
  
  	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
          	classpath:spring/application.xml
        </param-value>
	</context-param>

	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- 编码过滤 -->
  	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- springMVC -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
			classpath:spring/spring-mvc.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/spring/*</url-pattern>
	</servlet-mapping>
  
  	<!-- shiro-代理过滤器 start -->
  	<filter>
	    <filter-name>shiroFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    <init-param>
		      <param-name>targetFilterLifecycle</param-name>
		      <param-value>true</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>shiroFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
  	
  	<!-- shiro-代理过滤器 end -->
   
  
  	<!-- 配置rootKey -->
  	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>demo190814.root</param-value>
	</context-param>
  
   	<!-- 默认欢迎页 -->
  	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
