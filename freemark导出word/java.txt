/**
	 * 测试导出 
	 * @param req 
	 * @param rep
	 */
	@RequestMapping("/export")
	public void exportWord(HttpServletRequest req ,HttpServletResponse rep){
		// 封装参数
		List<Map<String,Object>> dataList = new ArrayList<Map<String,Object>>();
		for(int i=0;i<4;i++){
			Map<String,Object> dataMap = new HashMap<String, Object>();
			dataMap.put("no","w25012" );
			dataMap.put("name","LHB" );
			dataMap.put("sex", "女");
			dataMap.put("age", "18");
			dataMap.put("phone","13519678780");
			dataList.add(dataMap);
		}
		
		/*dataMap.put("titleName","李卉波");
		dataMap.put("age", "18");*/
		try {
			// 读取模板
			config = new Configuration();
			config.setEncoding(Locale.getDefault(),"UTF-8");
			config.setDefaultEncoding("UTF-8");
			// 设置异常处理器,这样的话就可以${a.b.c.d}即使没有属性也不会出错
			config.setTemplateExceptionHandler(TemplateExceptionHandler.IGNORE_HANDLER);
			config.setClassForTemplateLoading(this.getClass(), "/com/future/template");
			Template t = null;
			File file = null;
			InputStream in = null;
			t = config.getTemplate("template.ftl");
			
			// 指定位置生成文件
			String path = req.getSession().getServletContext().getRealPath("template.doc");
			File outFile = new File(path);
			 Writer out = new OutputStreamWriter(new FileOutputStream(outFile),"UTF-8");
			//Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outFile),"UTF-8"), 10240);
			Map<String,Object> params = new HashMap<>();
			params.put("userList", dataList);
			params.put("message","测试该字段的非必要行");
			t.process(params, out);
			out.close();
			
			// 响应前端 文件下载
			in = new FileInputStream(outFile);
			String fileName = "lhb.doc";
			rep.setCharacterEncoding("UTF-8");
			rep.setContentType("application/msword");
			rep.setHeader("Content-Disposition", "attachment;filename=".concat(String.valueOf(URLEncoder.encode(fileName, "UTF-8"))));
			ServletOutputStream servletOut = rep.getOutputStream();
			byte[] buffer = new byte[1024]; 
			int byteIndex = -1;
			while((byteIndex = in.read(buffer))!=-1){
				servletOut.write(buffer,0,byteIndex);
			}
			
			if(servletOut!=null){
				servletOut.close();
			}
			if(in!=null){
				in.close();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
				
	}
	